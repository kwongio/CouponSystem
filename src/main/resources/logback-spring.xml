<configuration>
    <!-- 서버 이름 설정: Spring Context에서 server.name 가져오기 -->
    <springProperty scope="context" name="server-name" source="server.name"/>

    <!-- 콘솔 로그 출력 설정 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- 로그 패턴 설정: 시간, 레벨, traceId, 간결한 클래스명, 메시지 -->
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{20}) traceId=%boldYellow(%X{traceId}) : %msg %n
            </pattern>
        </encoder>
    </appender>

    <!-- 로그 파일 출력 설정 (색상 없이 단순 출력) -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 로그 파일 경로 -->
        <file>logFile.log</file>

        <!-- 파일 롤링 정책 설정 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 일별로 로그 파일 생성 및 압축 -->
            <fileNamePattern>logFile.%d{yyyy-MM-dd}.log.zip</fileNamePattern>
            <!-- 로그 보존 기간: 최대 31일 -->
            <maxHistory>31</maxHistory>
            <!-- 전체 로그 파일 최대 크기 제한 -->
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>

        <encoder>
            <!-- 파일 출력: traceId 포함 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} traceId=%X{traceId} : %msg %n</pattern>
        </encoder>
    </appender>

    <!-- 루트 로거 설정: 로그 레벨 및 출력 대상 -->
    <root level="INFO">
        <!-- 콘솔 출력 -->
        <appender-ref ref="STDOUT" />
        <!-- 파일 출력 -->
        <appender-ref ref="FILE" />
    </root>
</configuration>
